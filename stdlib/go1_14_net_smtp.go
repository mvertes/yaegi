// Code generated by 'goexports net/smtp'. DO NOT EDIT.

// +build go1.14,!go1.15

package stdlib

import (
	"net/smtp"
	"reflect"

	"github.com/containous/yaegi/interp"
)

func init() {
	Symbols["net/smtp"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CRAMMD5Auth": reflect.ValueOf(smtp.CRAMMD5Auth),
		"Dial":        reflect.ValueOf(smtp.Dial),
		"NewClient":   reflect.ValueOf(smtp.NewClient),
		"PlainAuth":   reflect.ValueOf(smtp.PlainAuth),
		"SendMail":    reflect.ValueOf(smtp.SendMail),

		// type definitions
		"Auth":       reflect.ValueOf((*smtp.Auth)(nil)),
		"Client":     reflect.ValueOf((*smtp.Client)(nil)),
		"ServerInfo": reflect.ValueOf((*smtp.ServerInfo)(nil)),
	}
}
func (_w Wrapper) Start(server *smtp.ServerInfo) (proto string, toServer []byte, err error) {
	_f := interp.Method("Start", _w.Wrap).(func(server *smtp.ServerInfo) (proto string, toServer []byte, err error))
	return _f(server)
}
